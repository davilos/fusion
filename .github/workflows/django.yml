name: Django Tests

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5433:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.11
        uses: actions/setup-python@v2
        with:
          python-version: 3.11.4

      - name: Debug PostgreSQL Connection
        run: |
          psql -h $DB_HOST -U $DB_USER -d $DB_NAME

      - name: Install dependencies and DB migrations
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_ENGINE: ${{ secrets.DB_ENGINE }}
        run: |
          echo "DB_ENGINE: $DB_ENGINE"
          echo "DB_NAME: $DB_NAME"
          echo "DB_USER: $DB_USER"
          echo "DB_PASSWORD: $DB_PASSWORD"
          echo "DB_HOST: $DB_HOST"
          echo "DB_PORT: $DB_PORT"
          
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python manage.py makemigrations
          python manage.py migrate

      - name: Lint with flake8
        run: |
          python -m flake8 .

      - name: Blue check
        run: |
          python -m blue --check --diff . |
          python -m blue .

      - name: Isort check
        run: |
          python -m isort . --skip migrations

      - name: Coverage report
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_ENGINE: ${{ secrets.DB_ENGINE }}
        run: |
          coverage run manage.py test
          coverage report

      - name: Django Testing
        run: |
          python manage.py test 
